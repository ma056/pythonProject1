#!/usr/bin/env python
# -*- coding: UTF-8 -*-
'''
@Author  ：wma
@Date    ：2022/8/26 10:53 AM 
@process    :
@change :
'''
'''
https://blog.csdn.net/python_tian/article/details/122065324
https://www.bilibili.com/video/BV1vk4y127qw?spm_id_from=333.337.search-card.all.click&vd_source=600f6999665bb609a46adf3d8500c7ac
一、概念及原理
插入排序（英语：Insertion Sort）是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。
插入排序在实现上，在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间
二、实现
带排序：[3, 2, 1, 4, 6, 5]
首先将list的第一个值分为已经排序的值，其他皆为为排序的值
第一次：从第二个元素2开始与前面已经排序的元素进行比较，3>2，所以将2和3互换位置 --->[2, 3, 1, 4, 6, 5]
第二次：从第三个元素开始与第二个进行比较，3>1,所以将1和3互换位置，这里再将1与已经排序的元素进行比较后，放到第一个的位置 --->[1, 2, 3, 4, 6, 5]
第三次：从第四个元素开始与第三个进行比较，3<4,所以不需要互换位置，但这时候的已经排序元素有1234，--->[1, 2, 3, 4, 6, 5]
第四次：从第五个元素开始与第四个进行比较，4<6,所以不需要互换位置，但这时候的已经排序元素有12346，--->[1, 2, 3, 4, 6, 5]
第五次：从第六个元素开始与第五个进行比较，6>5,所以将6和5互换位置，这里再将5与已经排序的元素进行比较后，放到第五个的位置，--->[1, 2, 3, 4, 6, 5]
三、代码实现：
    list1 = [3, 2, 1, 4, 6, 5]
    length = len(list1)
    for i in range(1, length):
        j = i  # 表示当前的位置
        while j > 0 and list1[j] < list1[j - 1]:  # 当前位置可循环，和右边的比左边的小时
            list1[j - 1], list1[j] = list1[j], list1[j - 1]
            j -= 1
    
    print(list1)

'''